//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//     Website: http://ITdos.com/Dos/ORM/Index.html
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data;
using System.Data.Common;
using Dos.ORM;
using Dos.ORM.Common;

namespace DJTUStudentSystem.DataBaseModel
{

	/// <summary>
	/// 实体类UserInDept 。(属性说明自动提取数据库字段的描述信息)
	/// </summary>
	[Table("UserInDept")]
	[Serializable]
	public partial class UserInDept : Entity 
	{
		#region Model
		private int _UDPID;
		private string _UName;
		private string _Account;
		private string _Password;
		private string _DeptCode;
		private string _Question;
		private DateTime? _LastDate;
		private string _Oper;
		private int? _Role;
		/// <summary>
		/// 
		/// </summary>
		public int UDPID
		{
			get{ return _UDPID; }
			set
			{
				this.OnPropertyValueChange(_.UDPID,_UDPID,value);
				this._UDPID=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string UName
		{
			get{ return _UName; }
			set
			{
				this.OnPropertyValueChange(_.UName,_UName,value);
				this._UName=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string Account
		{
			get{ return _Account; }
			set
			{
				this.OnPropertyValueChange(_.Account,_Account,value);
				this._Account=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string Password
		{
			get{ return _Password; }
			set
			{
				this.OnPropertyValueChange(_.Password,_Password,value);
				this._Password=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string DeptCode
		{
			get{ return _DeptCode; }
			set
			{
				this.OnPropertyValueChange(_.DeptCode,_DeptCode,value);
				this._DeptCode=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string Question
		{
			get{ return _Question; }
			set
			{
				this.OnPropertyValueChange(_.Question,_Question,value);
				this._Question=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public DateTime? LastDate
		{
			get{ return _LastDate; }
			set
			{
				this.OnPropertyValueChange(_.LastDate,_LastDate,value);
				this._LastDate=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string Oper
		{
			get{ return _Oper; }
			set
			{
				this.OnPropertyValueChange(_.Oper,_Oper,value);
				this._Oper=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public int? Role
		{
			get{ return _Role; }
			set
			{
				this.OnPropertyValueChange(_.Role,_Role,value);
				this._Role=value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取实体中的标识列
		/// </summary>
		public override Field GetIdentityField()
		{
			return _.UDPID;
		}
		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		public override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
				_.UDPID};
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.UDPID,
				_.UName,
				_.Account,
				_.Password,
				_.DeptCode,
				_.Question,
				_.LastDate,
				_.Oper,
				_.Role};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				this._UDPID,
				this._UName,
				this._Account,
				this._Password,
				this._DeptCode,
				this._Question,
				this._LastDate,
				this._Oper,
				this._Role};
		}
		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","UserInDept");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field UDPID = new Field("UDPID","UserInDept","UDPID");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field UName = new Field("UName","UserInDept","UName");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Account = new Field("Account","UserInDept","Account");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Password = new Field("password","UserInDept","password");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field DeptCode = new Field("DeptCode","UserInDept","DeptCode");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Question = new Field("Question","UserInDept","Question");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field LastDate = new Field("LastDate","UserInDept","LastDate");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Oper = new Field("Oper","UserInDept","Oper");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Role = new Field("Role","UserInDept","Role");
		}
		#endregion


	}
}

