//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//     Support: http://www.cnblogs.com/huxj
//     Website: http://ITdos.com/Dos/ORM/Index.html
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data;
using System.Data.Common;
using Dos.ORM;
using Dos.ORM.Common;

namespace DJTUStudentSystem.DataBaseModel
{

    /// <summary>
    /// 实体类Vw_Class 。(属性说明自动提取数据库字段的描述信息)
    /// </summary>
    [Serializable]
    public partial class Vw_Class : Entity
    {
        public Vw_Class() : base("vw_Class") { }

        #region Model
        private string _ClassName;
        private string _Assistant;
        private string _DeptName;
        private string _GRName;
        private string _Edusys;
        private string _State;
        private string _SPName;
        private int _CLID;
        private int? _DeptID;
        private int? _SPID;
        private int? _GRDID;
        private int? _Num;
        private string _Sort;
        private string _RGName;
        private int? _BasicNum;
        private string _DeptCode;
        private int? _Limit;
        private int? _RGID;
        private string _CHKState;
        private string _Ifjoin;
        private string _BJDM;
        private string _CLSort;
        /// <summary>
        /// 
        /// </summary>
        public string ClassName
        {
            get { return _ClassName; }
            set
            {
                this.OnPropertyValueChange(_.ClassName, _ClassName, value);
                this._ClassName = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string Assistant
        {
            get { return _Assistant; }
            set
            {
                this.OnPropertyValueChange(_.Assistant, _Assistant, value);
                this._Assistant = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string DeptName
        {
            get { return _DeptName; }
            set
            {
                this.OnPropertyValueChange(_.DeptName, _DeptName, value);
                this._DeptName = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string GRName
        {
            get { return _GRName; }
            set
            {
                this.OnPropertyValueChange(_.GRName, _GRName, value);
                this._GRName = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string Edusys
        {
            get { return _Edusys; }
            set
            {
                this.OnPropertyValueChange(_.Edusys, _Edusys, value);
                this._Edusys = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string State
        {
            get { return _State; }
            set
            {
                this.OnPropertyValueChange(_.State, _State, value);
                this._State = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string SPName
        {
            get { return _SPName; }
            set
            {
                this.OnPropertyValueChange(_.SPName, _SPName, value);
                this._SPName = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public int CLID
        {
            get { return _CLID; }
            set
            {
                this.OnPropertyValueChange(_.CLID, _CLID, value);
                this._CLID = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public int? DeptID
        {
            get { return _DeptID; }
            set
            {
                this.OnPropertyValueChange(_.DeptID, _DeptID, value);
                this._DeptID = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public int? SPID
        {
            get { return _SPID; }
            set
            {
                this.OnPropertyValueChange(_.SPID, _SPID, value);
                this._SPID = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public int? GRDID
        {
            get { return _GRDID; }
            set
            {
                this.OnPropertyValueChange(_.GRDID, _GRDID, value);
                this._GRDID = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public int? Num
        {
            get { return _Num; }
            set
            {
                this.OnPropertyValueChange(_.Num, _Num, value);
                this._Num = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string Sort
        {
            get { return _Sort; }
            set
            {
                this.OnPropertyValueChange(_.Sort, _Sort, value);
                this._Sort = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string RGName
        {
            get { return _RGName; }
            set
            {
                this.OnPropertyValueChange(_.RGName, _RGName, value);
                this._RGName = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public int? BasicNum
        {
            get { return _BasicNum; }
            set
            {
                this.OnPropertyValueChange(_.BasicNum, _BasicNum, value);
                this._BasicNum = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string DeptCode
        {
            get { return _DeptCode; }
            set
            {
                this.OnPropertyValueChange(_.DeptCode, _DeptCode, value);
                this._DeptCode = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public int? Limit
        {
            get { return _Limit; }
            set
            {
                this.OnPropertyValueChange(_.Limit, _Limit, value);
                this._Limit = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public int? RGID
        {
            get { return _RGID; }
            set
            {
                this.OnPropertyValueChange(_.RGID, _RGID, value);
                this._RGID = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string CHKState
        {
            get { return _CHKState; }
            set
            {
                this.OnPropertyValueChange(_.CHKState, _CHKState, value);
                this._CHKState = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string Ifjoin
        {
            get { return _Ifjoin; }
            set
            {
                this.OnPropertyValueChange(_.Ifjoin, _Ifjoin, value);
                this._Ifjoin = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string BJDM
        {
            get { return _BJDM; }
            set
            {
                this.OnPropertyValueChange(_.BJDM, _BJDM, value);
                this._BJDM = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string CLSort
        {
            get { return _CLSort; }
            set
            {
                this.OnPropertyValueChange(_.CLSort, _CLSort, value);
                this._CLSort = value;
            }
        }
        #endregion

        #region Method
        /// <summary>
        /// 是否只读
        /// </summary>
        public override bool IsReadOnly()
        {
            return true;
        }
        /// <summary>
        /// 获取实体中的主键列
        /// </summary>
        public override Field[] GetPrimaryKeyFields()
        {
            return new Field[] {
                _.CLID};
        }
        /// <summary>
        /// 获取列信息
        /// </summary>
        public override Field[] GetFields()
        {
            return new Field[] {
                _.ClassName,
                _.Assistant,
                _.DeptName,
                _.GRName,
                _.Edusys,
                _.State,
                _.SPName,
                _.CLID,
                _.DeptID,
                _.SPID,
                _.GRDID,
                _.Num,
                _.Sort,
                _.RGName,
                _.BasicNum,
                _.DeptCode,
                _.Limit,
                _.RGID,
                _.CHKState,
                _.Ifjoin,
                _.BJDM,
                _.CLSort};
        }
        /// <summary>
        /// 获取值信息
        /// </summary>
        public override object[] GetValues()
        {
            return new object[] {
                this._ClassName,
                this._Assistant,
                this._DeptName,
                this._GRName,
                this._Edusys,
                this._State,
                this._SPName,
                this._CLID,
                this._DeptID,
                this._SPID,
                this._GRDID,
                this._Num,
                this._Sort,
                this._RGName,
                this._BasicNum,
                this._DeptCode,
                this._Limit,
                this._RGID,
                this._CHKState,
                this._Ifjoin,
                this._BJDM,
                this._CLSort};
        }
        /// <summary>
        /// 给当前实体赋值
        /// </summary>
        public override void SetPropertyValues(IDataReader reader)
        {
            this._ClassName = DataUtils.ConvertValue<string>(reader["ClassName"]);
            this._Assistant = DataUtils.ConvertValue<string>(reader["Assistant"]);
            this._DeptName = DataUtils.ConvertValue<string>(reader["DeptName"]);
            this._GRName = DataUtils.ConvertValue<string>(reader["GRName"]);
            this._Edusys = DataUtils.ConvertValue<string>(reader["Edusys"]);
            this._State = DataUtils.ConvertValue<string>(reader["state"]);
            this._SPName = DataUtils.ConvertValue<string>(reader["SPName"]);
            this._CLID = DataUtils.ConvertValue<int>(reader["CLID"]);
            this._DeptID = DataUtils.ConvertValue<int?>(reader["DeptID"]);
            this._SPID = DataUtils.ConvertValue<int?>(reader["SPID"]);
            this._GRDID = DataUtils.ConvertValue<int?>(reader["GRDID"]);
            this._Num = DataUtils.ConvertValue<int?>(reader["Num"]);
            this._Sort = DataUtils.ConvertValue<string>(reader["Sort"]);
            this._RGName = DataUtils.ConvertValue<string>(reader["RGName"]);
            this._BasicNum = DataUtils.ConvertValue<int?>(reader["BasicNum"]);
            this._DeptCode = DataUtils.ConvertValue<string>(reader["DeptCode"]);
            this._Limit = DataUtils.ConvertValue<int?>(reader["Limit"]);
            this._RGID = DataUtils.ConvertValue<int?>(reader["RGID"]);
            this._CHKState = DataUtils.ConvertValue<string>(reader["CHKState"]);
            this._Ifjoin = DataUtils.ConvertValue<string>(reader["ifjoin"]);
            this._BJDM = DataUtils.ConvertValue<string>(reader["BJDM"]);
            this._CLSort = DataUtils.ConvertValue<string>(reader["CLSort"]);
        }
        /// <summary>
        /// 给当前实体赋值
        /// </summary>
        public override void SetPropertyValues(DataRow row)
        {
            this._ClassName = DataUtils.ConvertValue<string>(row["ClassName"]);
            this._Assistant = DataUtils.ConvertValue<string>(row["Assistant"]);
            this._DeptName = DataUtils.ConvertValue<string>(row["DeptName"]);
            this._GRName = DataUtils.ConvertValue<string>(row["GRName"]);
            this._Edusys = DataUtils.ConvertValue<string>(row["Edusys"]);
            this._State = DataUtils.ConvertValue<string>(row["state"]);
            this._SPName = DataUtils.ConvertValue<string>(row["SPName"]);
            this._CLID = DataUtils.ConvertValue<int>(row["CLID"]);
            this._DeptID = DataUtils.ConvertValue<int?>(row["DeptID"]);
            this._SPID = DataUtils.ConvertValue<int?>(row["SPID"]);
            this._GRDID = DataUtils.ConvertValue<int?>(row["GRDID"]);
            this._Num = DataUtils.ConvertValue<int?>(row["Num"]);
            this._Sort = DataUtils.ConvertValue<string>(row["Sort"]);
            this._RGName = DataUtils.ConvertValue<string>(row["RGName"]);
            this._BasicNum = DataUtils.ConvertValue<int?>(row["BasicNum"]);
            this._DeptCode = DataUtils.ConvertValue<string>(row["DeptCode"]);
            this._Limit = DataUtils.ConvertValue<int?>(row["Limit"]);
            this._RGID = DataUtils.ConvertValue<int?>(row["RGID"]);
            this._CHKState = DataUtils.ConvertValue<string>(row["CHKState"]);
            this._Ifjoin = DataUtils.ConvertValue<string>(row["ifjoin"]);
            this._BJDM = DataUtils.ConvertValue<string>(row["BJDM"]);
            this._CLSort = DataUtils.ConvertValue<string>(row["CLSort"]);
        }
        #endregion

        #region _Field
        /// <summary>
        /// 字段信息
        /// </summary>
        public class _
        {
            /// <summary>
            /// * 
            /// </summary>
            public readonly static Field All = new Field("*", "vw_Class");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field ClassName = new Field("ClassName", "vw_Class", "ClassName");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field Assistant = new Field("Assistant", "vw_Class", "Assistant");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field DeptName = new Field("DeptName", "vw_Class", "DeptName");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field GRName = new Field("GRName", "vw_Class", "GRName");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field Edusys = new Field("Edusys", "vw_Class", "Edusys");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field State = new Field("state", "vw_Class", "state");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field SPName = new Field("SPName", "vw_Class", "SPName");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field CLID = new Field("CLID", "vw_Class", "CLID");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field DeptID = new Field("DeptID", "vw_Class", "DeptID");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field SPID = new Field("SPID", "vw_Class", "SPID");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field GRDID = new Field("GRDID", "vw_Class", "GRDID");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field Num = new Field("Num", "vw_Class", "Num");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field Sort = new Field("Sort", "vw_Class", "Sort");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field RGName = new Field("RGName", "vw_Class", "RGName");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field BasicNum = new Field("BasicNum", "vw_Class", "BasicNum");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field DeptCode = new Field("DeptCode", "vw_Class", "DeptCode");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field Limit = new Field("Limit", "vw_Class", "Limit");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field RGID = new Field("RGID", "vw_Class", "RGID");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field CHKState = new Field("CHKState", "vw_Class", "CHKState");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field Ifjoin = new Field("ifjoin", "vw_Class", "ifjoin");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field BJDM = new Field("BJDM", "vw_Class", "BJDM");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field CLSort = new Field("CLSort", "vw_Class", "CLSort");
        }
        #endregion


    }
}

