//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//     Website: http://ITdos.com/Dos/ORM/Index.html
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data;
using System.Data.Common;
using Dos.ORM;
using Dos.ORM.Common;

namespace DJTUStudentSystem.DataBaseModel
{

	/// <summary>
	/// 实体类FileManager 。(属性说明自动提取数据库字段的描述信息)
	/// </summary>
	[Table("FileManager")]
	[Serializable]
	public partial class FileManager : Entity 
	{
		#region Model
		private int _FMID;
		private int? _SequID;
		private int? _GPID;
		private string _FSortCode;
		private string _MFilename;
		private DateTime _Indate;
		private string _ToDept;
		private string _Content;
		private string _FromDept;
		private string _FromDeptCode;
		private string _State;
		private string _Mark;
		private int? _LookNumber;
		private string _FName;
		private string _Oper;
		private string _IfPub;
		/// <summary>
		/// 
		/// </summary>
		public int FMID
		{
			get{ return _FMID; }
			set
			{
				this.OnPropertyValueChange(_.FMID,_FMID,value);
				this._FMID=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public int? SequID
		{
			get{ return _SequID; }
			set
			{
				this.OnPropertyValueChange(_.SequID,_SequID,value);
				this._SequID=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public int? GPID
		{
			get{ return _GPID; }
			set
			{
				this.OnPropertyValueChange(_.GPID,_GPID,value);
				this._GPID=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string FSortCode
		{
			get{ return _FSortCode; }
			set
			{
				this.OnPropertyValueChange(_.FSortCode,_FSortCode,value);
				this._FSortCode=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string MFilename
		{
			get{ return _MFilename; }
			set
			{
				this.OnPropertyValueChange(_.MFilename,_MFilename,value);
				this._MFilename=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public DateTime Indate
		{
			get{ return _Indate; }
			set
			{
				this.OnPropertyValueChange(_.Indate,_Indate,value);
				this._Indate=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string ToDept
		{
			get{ return _ToDept; }
			set
			{
				this.OnPropertyValueChange(_.ToDept,_ToDept,value);
				this._ToDept=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string Content
		{
			get{ return _Content; }
			set
			{
				this.OnPropertyValueChange(_.Content,_Content,value);
				this._Content=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string FromDept
		{
			get{ return _FromDept; }
			set
			{
				this.OnPropertyValueChange(_.FromDept,_FromDept,value);
				this._FromDept=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string FromDeptCode
		{
			get{ return _FromDeptCode; }
			set
			{
				this.OnPropertyValueChange(_.FromDeptCode,_FromDeptCode,value);
				this._FromDeptCode=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string State
		{
			get{ return _State; }
			set
			{
				this.OnPropertyValueChange(_.State,_State,value);
				this._State=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string Mark
		{
			get{ return _Mark; }
			set
			{
				this.OnPropertyValueChange(_.Mark,_Mark,value);
				this._Mark=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public int? LookNumber
		{
			get{ return _LookNumber; }
			set
			{
				this.OnPropertyValueChange(_.LookNumber,_LookNumber,value);
				this._LookNumber=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string FName
		{
			get{ return _FName; }
			set
			{
				this.OnPropertyValueChange(_.FName,_FName,value);
				this._FName=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string Oper
		{
			get{ return _Oper; }
			set
			{
				this.OnPropertyValueChange(_.Oper,_Oper,value);
				this._Oper=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string IfPub
		{
			get{ return _IfPub; }
			set
			{
				this.OnPropertyValueChange(_.IfPub,_IfPub,value);
				this._IfPub=value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取实体中的标识列
		/// </summary>
		public override Field GetIdentityField()
		{
			return _.FMID;
		}
		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		public override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
				_.FMID};
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.FMID,
				_.SequID,
				_.GPID,
				_.FSortCode,
				_.MFilename,
				_.Indate,
				_.ToDept,
				_.Content,
				_.FromDept,
				_.FromDeptCode,
				_.State,
				_.Mark,
				_.LookNumber,
				_.FName,
				_.Oper,
				_.IfPub};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				this._FMID,
				this._SequID,
				this._GPID,
				this._FSortCode,
				this._MFilename,
				this._Indate,
				this._ToDept,
				this._Content,
				this._FromDept,
				this._FromDeptCode,
				this._State,
				this._Mark,
				this._LookNumber,
				this._FName,
				this._Oper,
				this._IfPub};
		}
		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","FileManager");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field FMID = new Field("FMID","FileManager","FMID");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field SequID = new Field("SequID","FileManager","SequID");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field GPID = new Field("GPID","FileManager","GPID");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field FSortCode = new Field("FSortCode","FileManager","FSortCode");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field MFilename = new Field("MFilename","FileManager","MFilename");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Indate = new Field("Indate","FileManager","Indate");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field ToDept = new Field("ToDept","FileManager","ToDept");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Content = new Field("Content","FileManager","Content");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field FromDept = new Field("FromDept","FileManager","FromDept");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field FromDeptCode = new Field("FromDeptCode","FileManager","FromDeptCode");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field State = new Field("State","FileManager","State");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Mark = new Field("Mark","FileManager","Mark");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field LookNumber = new Field("LookNumber","FileManager","LookNumber");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field FName = new Field("FName","FileManager","FName");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Oper = new Field("Oper","FileManager","Oper");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field IfPub = new Field("ifPub","FileManager","ifPub");
		}
		#endregion


	}
}

